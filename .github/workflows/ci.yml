name: CI

on:
  pull_request:

jobs:
  commit-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: "echo \"module.exports = {extends: ['@commitlint/config-conventional']}\" > commitlint.config.js"
      - uses: wagoid/commitlint-github-action@v1
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  unit-test:
    needs: commit-lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest] #[macos-latest, ubuntu-latest]
        python-version: [3.7, 3.8]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            sudo apt-get install libsndfile1
          fi
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Test with pytest
        run: |
          pytest --force-flaky --min-passes 1 --max-runs 5 -v tests/unit
        timeout-minutes: 30

  integration-test:
    needs: commit-lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest] #[macos-latest, ubuntu-latest]
        python-version: [3.7, 3.8]

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            sudo apt-get install libsndfile1
          fi
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Build pod image
        run: |
          docker build -f tests/integration/distributed/hub_mwu/Dockerfile tests/integration/distributed/hub_mwu -t hubpod:test
        timeout-minutes: 5
      - name: Test with pytest
        run: |
          pytest --force-flaky --min-passes 1 --max-runs 5 -v tests/integration
        timeout-minutes: 30
