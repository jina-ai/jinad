name: CD

on:
  push:
    branches:
      - main

jobs:
  publish-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - run: |
          pip install . --no-cache-dir
          echo "JINAD_VERSION=$(python -c "import jinad;print(jinad.__version__)")-devel" >> $GITHUB_ENV
          echo "JINAD_PREFIX=$(python -c "import jinad;print(jinad.__prefix__)")-devel" >> $GITHUB_ENV
      - name: Setup docker buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          buildx-version: latest
      - name: Setup docker environment
        run: |
            echo ${{ steps.buildx.outputs.platforms }}
            echo "VCS_REF=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
            echo "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV
      - name: Upload to Docker Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: jinaai/jinad
          username: ${{ secrets.DOCKERHUB_DEVBOT_USER }}
          password: ${{ secrets.DOCKERHUB_DEVBOT_TOKEN }}
          dockerfile: Dockerfiles/Dockerfile
          buildargs: BUILD_DATE, VCS_REF
          tags: "latest, devel, ${{env.JINAD_VERSION}}, ${{env.JINAD_PREFIX}}"
          # TODO: remove latest once tagging workflow is fixed

  update-api-docs:
    # currently deploys api docs on every merge to main
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: jina-ai/api
          path: api
          token: ${{ secrets.JINA_DEV_BOT }}
      - uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: create-api-json
        run: |
          pip install . --no-cache-dir
          python -c "from jinad.main import write_openapi_schema; write_openapi_schema()"
          echo "JINAD_VERSION=$(python -c "import jinad;print(jinad.__version__)")" >> $GITHUB_ENV
      - name: redoc-cli-jinad
        uses: seeebiii/redoc-cli-github-action@v10
        with:
          args: 'bundle schema.json -o index.html'
      - name: push-to-api-repo
        run: |
          cd api && mkdir -p jinad && cd jinad
          cp ../../index.html .
          cp index.html ${{env.JINAD_VERSION}}.html
          cp index.html ${{env.JINAD_VERSION}}-devel.html
          git config --local user.email "dev-bot@jina.ai"
          git config --local user.name "Jina Dev Bot"
          git add index.html ${{env.JINAD_VERSION}}.html ${{env.JINAD_VERSION}}-devel.html && git commit -m "jinad update ${{env.JINAD_VERSION}} due to ${{github.event_name}} on ${{github.repository}}" && git push
